plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'io.gitlab.arturbosch.detekt' version '1.21.0-RC2'
}

configurations {
    ktlint
}
def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.denorapplications.mvvmtemplate"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "BASE_URL", apikeyProperties['BASE_URL'])
        buildConfigField("String", "CATS_API_KEY", apikeyProperties['CATS_API_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
}

detekt {
    toolVersion = "1.21.0-RC2"
    source = files("src/main/java")
    parallel = true
    config = files("detekt-config.yml")
    buildUponDefaultConfig = true
    allRules = false
    basePath = projectDir
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //NavComponent
    implementation "androidx.navigation:navigation-fragment-ktx:2.4.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.4.2"

    //Hilt
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.2'

    //Coroutines Lifecycle scope
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    //Fragments with viewModels
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    //Room
    implementation 'androidx.room:room-runtime:2.4.2'
    implementation 'androidx.room:room-ktx:2.4.2'
    kapt 'androidx.room:room-compiler:2.4.2'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    //Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'

    //Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    //Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    //Logger
    implementation 'com.orhanobut:logger:2.2.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.0'

    //Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.1"

    // Mockito framework
    testImplementation "org.mockito:mockito-core:4.6.0"
    // mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:1.6.0"

    //Ktlint
    ktlint "com.pinterest:ktlint:0.43.1"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
